n, m, r, c = map(int, input().split())
dir_input = list(input().split())

arr = [[0 for _ in range(n)] for _ in range(n)]

# F : {T : {dir : (F, T)}}
dice = {
    
    1 : {
        2 : {'L': (1, 4), 'R': (1, 3), 'U': (5, 1), 'D': (2, 6)}, 
        3 : {'L': (1, 2), 'R': (1, 5), 'U': (4, 1), 'D': (3, 6)}, 
        4 : {'L': (1, 5), 'R': (1, 2), 'U': (3, 1), 'D': (4, 6)}, 
        5 : {'L': (1, 3), 'R': (1, 4), 'U': (2, 1), 'D': (5, 6)}
        },

    2 : {
        1 : {'L': (2, 3), 'R': (2, 4), 'U': (6, 2), 'D': (1, 5)}, 
        3 : {'L': (2, 6), 'R': (2, 1), 'U': (4, 2), 'D': (3, 5)}, 
        4 : {'L': (2, 1), 'R': (2, 6), 'U': (3, 2), 'D': (4, 5)}, 
        6 : {'L': (2, 4), 'R': (2, 3), 'U': (1, 2), 'D': (6, 5)}
        },
    
    3 : {
        1 : {'L': (3, 5), 'R': (3, 2), 'U': (6, 3), 'D': (1, 4)}, 
        2 :  {'L': (3, 1), 'R': (3, 6), 'U': (5, 3), 'D': (2, 4)}, 
        5 :  {'L': (3, 6), 'R': (3, 1), 'U': (2, 3), 'D': (5, 4)}, 
        6:  {'L': (3, 2), 'R': (3, 5), 'U': (1, 3), 'D': (6, 4)}
        },
    
    4 : {
        2 : {'L': (4, 6), 'R': (4, 1), 'U': (5, 4), 'D': (2, 3)}, 
        5 :  {'L': (4, 1), 'R': (4, 6), 'U': (2, 4), 'D': (5, 3)}, 
        1 :  {'L': (4, 2), 'R': (4, 5), 'U': (6, 4), 'D': (1, 3)}, 
        6 :  {'L': (4, 5), 'R': (4, 2), 'U': (1, 4), 'D': (6, 3)}
        },

    5 : {
        1 :  {'L': (5, 4), 'R': (5, 3), 'U': (6, 5), 'D': (1, 2)}, 
        3 :  {'L': (5, 1), 'R': (5, 6), 'U': (4, 5), 'D': (3, 2)}, 
        4 :  {'L': (5, 6), 'R': (5, 1), 'U': (3, 5), 'D': (4, 2)}, 
        6 :  {'L': (5, 3), 'R': (5, 4), 'U': (1, 5), 'D': (6, 2)}
        },

    6 : {
        2 : {'L': (6, 3), 'R': (6, 4), 'U': (5, 6), 'D': (2, 1)}, 
        3 :  {'L': (6, 5), 'R': (6, 2), 'U': (4, 6), 'D': (3, 1)}, 
        4 :  {'L': (6, 2), 'R': (6, 5), 'U': (3, 6), 'D': (4, 1)}, 
        5 :  {'L': (6, 4), 'R': (6, 3), 'U': (2, 6), 'D': (5, 1)}
        },
}

front = 2
top = 1
r, c = r-1, c-1

arr[r][c] = 7 - top


def move(r, c, d):
    global front, top

    move_dir = {'L' : (0, -1), 'R': (0, 1), 'U': (-1, 0), 'D': (1, 0)}
    front, top = dice[front][top][d]
    rn, cm = r + move_dir[d][0], c + move_dir[d][1]

    if ( 0 <= rn < n and 0 <= cm < n):
        arr[rn][cm] = 7 - top
        return rn, cm 
    
    return r, c


for d in dir_input:
    mr, mc =  move(r, c, d)
    r, c = mr, mc

ans = 0
for i in arr:
    ans += sum(i)
print(ans)